{"version":3,"file":"grok.js","sources":["../src/grok.ts"],"sourcesContent":["// import {TypeDoc} from 'typedoc';\nconst TypeDoc = require('typedoc');\n\nconst highlightJs = require('highlight.js'); // https://highlightjs.org/\nconst path = require('path');\nconst fs = require('fs-extra');\n\nconst MarkdownIt = require('markdown-it');\nconst markdown = new MarkdownIt({\n    // See https://markdown-it.github.io/markdown-it/\n    html: true,\n    typographer: true,\n    highlight: function (str, lang) {\n        if ((lang ?? 'typescript') && highlightJs.getLanguage(lang)) {\n            try {\n                return highlightJs.highlight(lang, str).value;\n            } catch (err) {\n                console.log(err);\n            }\n        }\n\n        return ''; // use external default escaping\n    },\n});\n\ninterface Options {\n    outFile?: string;\n\n    /** If the tsc compiler encounters an error while parsing the declaration files,\n     * attempt to continue nonetheless\n     */\n    ignoreErrors?: boolean;\n    // verbose?: boolean;\n\n    documentTemplate?:\n        | string\n        | ((substitutions: { [key: string]: any }) => string);\n\n    cssVariables: { [variable: string]: string };\n\n    keywordSynonyms?: { [word: string]: string[] };\n\n    /**\n     * Prefix added to the value of a {@tutorial} tag to determine the\n     * URL to redirected to.\n     * For example, {@tutorial readme.html} with tutorialPath = 'https://example.com/docs'\n     * will redirect to 'https://example.com/docs/readme.html'\n     */\n    tutorialPath: string;\n\n    modules?: string[];\n\n    sdkName?: string;\n}\ntype Tag =\n    | 'alpha'\n    | 'beta'\n    | 'category'\n    | 'command'\n    | 'deprecated'\n    | 'eventproperty'\n    | 'experimental'\n    | 'hidden'\n    | 'param'\n    | 'ignore'\n    | 'internal'\n    | 'keywords'\n    | 'label'\n    | 'override'\n    | 'readonly'\n    | 'remarks'\n    | 'returns'\n    | 'sealed'\n    | 'virtual';\n\ntype Category = {\n    title: string;\n    children: Reflection[];\n};\n\ntype ReflectionKind =\n    | 0\n    | 1\n    | 2\n    | 4\n    | 8\n    | 16\n    | 32\n    | 64\n    | 128\n    | 256\n    | 512\n    | 1024\n    | 2048\n    | 4096\n    | 8192\n    | 16384\n    | 32768\n    | 65536\n    | 131072\n    | 262144\n    | 524288\n    | 1048576\n    | 2097152\n    | 4194304\n    | 8388608\n    | 16777216;\n\ntype Reflection = {\n    id?: number;\n    name?: string;\n    kind?: ReflectionKind;\n    type?:\n        | 'abstract'\n        | 'array'\n        | 'conditionals'\n        | 'index'\n        | 'indexedAccess'\n        | 'inferred'\n        | 'intrinsic'\n        | 'intersection'\n        | 'predicate'\n        | 'query'\n        | 'reference'\n        | 'reflection'\n        | 'stringLiteral'\n        | 'tuple'\n        | 'typeOperator'\n        | 'typeParameter'\n        | 'union'\n        | 'unknown'\n        | 'void'\n        | Reflection; // For kind = 32: Variable,\n    // 1024: Property, 4096: Call Signature, 16384: Constructor Signature\n    // 8192: Index Signature, 32768: Parameter, 131072: Type Parameter,\n    // 4194304: Type Alias\n    groups?: Reflection[]; // For type = 'groups'\n    children?: Reflection[];\n    title?: string; // For groups\n    comment?: {\n        tags?: { tag: Tag; text?: string }[];\n        shortText?: string;\n        text?: string;\n        returns?: string;\n    };\n    flags?: {\n        isAbstract?: boolean;\n        isPrivate?: boolean;\n        isProtected?: boolean;\n        isPublic?: boolean;\n        isExternal?: boolean;\n        isStatic?: boolean;\n    };\n    categories?: { title: string; children: number[] }[];\n    signatures?: Reflection[];\n    getSignature?: Reflection; // For accessors\n    setSignature?: Reflection; // For accessors\n    elementType?: Reflection;\n    objectType?: Reflection;\n    indexType?: Reflection;\n    typeArguments?: Reflection[];\n    types?: Reflection[];\n    declaration?: Reflection;\n    operator?: string; // For type 'typeOperator'\n    target?: Reflection; // For type 'typeOperator'\n    constraint?: Reflection;\n    value?: string; // For type === 'stringLiteral'\n    elements?: Reflection[]; // For type === 'tuple'\n    defaultValue?: string; // For kind === 16 (Enum Member)\n    indexSignature?: Reflection[];\n    parameters?: Reflection[];\n    typeParameter?: Reflection[];\n    extendedTypes?: Reflection[]; // For kind = : Class\n    implementedTypes?: Reflection[]; // For kind = : Class\n    extendedBy?: Reflection[]; // For kind = : Class\n    implementedBy?: Reflection[]; // For kind = : Class\n    queryType?: Reflection; // For kind = 'query'\n    inheritedFrom?: Reflection; // For kind = 'method', parent class\n    implementationOf?: Reflection; // For kind = 'method', interface\n    sources?: {\n        fileName: string;\n        character: number;\n        line: number;\n    }[]; // external global references, e.g. \"HTMLElement\"\n};\n\ntype Permalink = {\n    anchor: string;\n    title: string;\n    document?: string;\n};\n\nfunction span(\n    value: string,\n    className:\n        | 'subhead'\n        | 'head'\n        | 'head deprecated'\n        | 'stack'\n        | 'flags'\n        | 'keyword'\n        | 'modifier'\n        | 'modifier-tag'\n        | 'red modifier-tag'\n        | 'orange modifier-tag'\n        | 'tag-name'\n        | 'class-label'\n        | 'string-literal'\n        | 'deprecated'\n        | 'highlighting-mark-container'\n        | ''\n) {\n    if (!className) return '<span>' + value + '</span>';\n    return '<span class=\"' + className + '\">' + value + '</span>';\n}\n\nfunction div(content: string, className?: string) {\n    if (className) {\n        return '\\n<div class=\"' + className + '\">' + content + '</div>\\n';\n    }\n    return '\\n<div>' + content + '</div>\\n';\n}\n\nfunction punct(value: string): string {\n    return '<span class=\"punctuation\">' + value + '</span>';\n}\n\nfunction keyword(k: string): string {\n    return '<span class=\"keyword\">' + k + '</span>';\n}\n\nfunction section(\n    content: string,\n    options?: { permalink?: Permalink; className?: string; keywords?: string }\n): string {\n    let result = '<section';\n    if (options?.keywords) {\n        result += ' data-keywords=\"' + options.keywords.toLowerCase() + '\"';\n    }\n    if (options?.permalink?.anchor) {\n        result += ' id=\"' + encodeURIComponent(options.permalink.anchor) + '\"';\n    }\n    if (options?.className) {\n        result += ' class=\"' + options.className + '\"';\n    }\n    result += '>' + content;\n    return result + '\\n</section>\\n';\n}\n\nfunction list(\n    items: (string | [string, string])[],\n    className?: string\n): string {\n    if (!items || items.length === 0) return '';\n    let result = '';\n    if (Array.isArray(items[0])) {\n        const definitions = items as [string, string][];\n        if (className) {\n            result += '\\n<dl class=\"' + className + '\">\\n';\n        } else {\n            result += '\\n<dl>\\n';\n        }\n        result += definitions\n            .map(\n                (def) => '\\n<dt>' + def[0] + '</dt>\\n<dd>' + def[1] + '</dd>\\n'\n            )\n            .join('');\n        result += '\\n</dl>\\n';\n    } else {\n        if (className) {\n            result += '\\n<ul class=\"' + className + '\">\\n';\n        } else {\n            result += '\\n<ul>\\n';\n        }\n        result += items.map((item) => '\\n<li>' + item + '</li>\\n').join('');\n        result += '\\n</ul>\\n';\n    }\n    return result;\n}\n\nfunction highlightingMark(content: string): string {\n    return span(\n        content +\n            '<svg class=\"highlighting-mark\"><use xlink:href=\"#highlighting-mark-' +\n            (Math.floor(3 * Math.random()) + 1) +\n            '\"></use></svg>',\n        'highlighting-mark-container'\n    );\n}\n\nfunction heading(\n    level: number,\n    subhead: string,\n    head: string,\n    permalink?: Permalink,\n    options?: { deprecated?: boolean; className?: string }\n) {\n    const tag = 'h' + Number(level).toString();\n\n    let body = subhead ? span(subhead, 'subhead') : '';\n\n    if (permalink?.anchor) {\n        body += highlightingMark(\n            span(head, options?.deprecated ? 'head deprecated' : 'head')\n        );\n        body = span(body, 'stack');\n        body += renderPermalinkAnchor(permalink);\n    } else {\n        body += span(head, options?.deprecated ? 'head deprecated' : 'head');\n        body = span(body, 'stack');\n    }\n    return (\n        '<' +\n        tag +\n        (options?.className ? ' class=\"' + options.className + '\"' : '') +\n        '>' +\n        body +\n        '</' +\n        tag +\n        '>'\n    );\n}\n\n// A \"reflection\" is some type information.\n// In some cases, some types reference other type info by reference.\n// This function locates these references by traversing the JSON\n// data structure (from 'root')\n\nfunction getReflectionByID(id: number, root = gNodes): Reflection {\n    // A node with a given id can either be the actual node\n    // or a **reference** to this node. Ignore references.\n    if (root.type !== 'reference' && root.id === id) return root;\n    let result: Reflection;\n    if (\n        root.children?.some((x) => {\n            result = getReflectionByID(id, x);\n            return result !== null;\n        }) ??\n        false\n    ) {\n        return result;\n    }\n    return null;\n}\n\nfunction getReflectionsByName(name: string, root?: Reflection): Reflection[] {\n    if (!root) root = gNodes;\n    let result = [];\n    if (getName(root) === name) result.push(root);\n    if (root.children) {\n        root.children.forEach((x) => {\n            result = [...result, ...getReflectionsByName(name, x)];\n        });\n    }\n    return result;\n}\n\n/**\n * While a node ID is unique, names might not be.\n * Return all the matching nodes.\n */\nfunction getReflectionByName(\n    name: string,\n    root?: Reflection,\n    kind?: number | string\n): Reflection {\n    let candidates = [];\n    candidates = getReflectionsByName(name, root);\n    if (candidates.length > 0) {\n        candidates.sort((a, b) => b.kind - a.kind);\n        if (typeof kind === 'number') {\n            candidates = candidates.filter((x) => (x.kind & kind) !== 0);\n        } else if (kind === 'static') {\n            candidates = candidates.filter(\n                (x) => x.kind === 2048 && hasFlag(x, 'isStatic')\n            );\n        } else if (typeof kind === 'string') {\n            const numKind = NUMERIC_KIND[kind];\n            candidates = candidates.filter((x) => (x.kind & numKind) !== 0);\n        }\n        if (candidates.length > 0) {\n            return candidates[0];\n        }\n    }\n    return null;\n}\n\nconst NUMERIC_KIND = {\n    namespace: 2,\n    enum: 4,\n    variable: 32,\n    function: 64,\n    class: 128,\n    interface: 256,\n    instance: 1024 | 2048 | 262144, // property, method or getter/setter\n    static: 1024 | 2048, // property or method\n    type: 4194304,\n};\n\nfunction getNameSelector(segment: string): [string, string] {\n    const m = segment.match(/^\\(([^\\:]+)(\\:([^\\)]+))?\\)$/);\n    if (m) {\n        return [m[1], m[3]];\n    }\n    return [segment, undefined];\n}\n\n/*\n * Given a link, e.g. \"(Animal:class).(run:instance)\" or \"walk\"\n * return a matching reflection\n *\n * According to typedoc (https://typedoc.org/guides/doccomments/):\n * Links are resolved by looking at child reflections, then at adjacent\n * reflections, then at parent reflections. If a name contains a dot (.),\n * each part of the name will be treated as the name of a reflection.\n * For example, to link to the member property of Foo, you can use\n * {@link Foo.member}.\n */\n\nfunction getReflectionByLink(link: string, root?: Reflection): Reflection {\n    const segments = link.split('.');\n    if (segments.length === 1) {\n        // No path: look at children, then siblings, then parent, then global\n        const [name, kind] = getNameSelector(segments[0]);\n        return (\n            getReflectionByName(name, root, kind) ||\n            getReflectionByName(name, getParent(root), kind) ||\n            getReflectionByName(name, null, kind)\n        );\n    }\n\n    const lastSegment = segments.pop();\n    let node = null;\n    for (const segment of segments) {\n        // Find the next path segment\n        const [name, kind] = getNameSelector(segment);\n        node = getReflectionByName(name, node, kind);\n    }\n    return getReflectionByLink(lastSegment, node);\n}\n\n/**\n * Return an array of ancestor nodes.\n * result[0] is the node\n * result[1] is the parent, etc..\n */\nfunction getAncestors(node: Reflection, root = gNodes): Reflection[] {\n    if (!node) return null;\n    if (node.id === root.id) return [root];\n    if (root.children) {\n        for (const child of root.children) {\n            const ancestors = getAncestors(node, child);\n            if (ancestors) {\n                return [...ancestors, root];\n            }\n        }\n    }\n    return null;\n}\n\nfunction getParent(node: Reflection): Reflection {\n    return getAncestors(node)?.[1] ?? null;\n}\n\n/**\n * Return all the children matching the specified list of IDs\n */\nfunction getChildrenByID(node: Reflection, children: number[]): Reflection[] {\n    return children.map(\n        (x) => node.children.filter((child) => child.id === x)[0]\n    );\n}\n\nfunction getName(node: Reflection): string {\n    if (node.kind === 1) {\n        return getModuleName(node);\n    }\n    return node.name;\n}\n\nfunction everyStringLiteral(nodes: Reflection[]): boolean {\n    return nodes.every((x) => x.type === 'stringLiteral');\n}\n\nfunction sortOtherCategoryAtEnd(categories: Category[]): Category[] {\n    return categories.sort((a, b): number => {\n        if (a.title === b.title) return 0;\n        if (a.title === 'Other') return 1;\n        if (b.title === 'Other') return -1;\n        return a.title < b.title ? -1 : 1;\n    });\n}\n\nconst KIND_ORDER = {\n    512: 1, // constructor\n\n    64: 2, // function\n    2048: 3, // method\n    262144: 4, // setter/getter (accessor)\n\n    1024: 5, // property\n    32: 6, // variable/properties\n\n    256: 7, // interface\n    128: 8, // class\n    2: 9, // namespace\n\n    4194304: 10, // type alias\n    4: 11, // enum\n};\n\nfunction sortGroups(groups: Reflection[]): Reflection[] {\n    return groups.sort((a, b) => {\n        console.assert(KIND_ORDER[b.kind] && KIND_ORDER[a.kind]);\n        return KIND_ORDER[a.kind] === KIND_ORDER[b.kind]\n            ? 0\n            : KIND_ORDER[a.kind] < KIND_ORDER[b.kind]\n            ? -1\n            : +1;\n    });\n}\n\n/**\n * Categories are grouping of related items, for example\n * all methods about a particular topic.\n *\n * In the source files, categories are indicated with a\n * @category tag (a tsdoc standard)\n */\n\nfunction getCategories(node: Reflection, kind: number): Category[] {\n    let result = [];\n    const children = node.groups?.filter((x) => (x.kind & kind) !== 0);\n    if (!children || children.length !== 1) {\n        // No groups. Are there categories?\n        if (node.categories) {\n            return sortOtherCategoryAtEnd(\n                (node.categories as unknown) as Category[]\n            );\n        }\n        return [\n            {\n                title: '',\n                children: node.children.filter((x) => (x.kind & kind) !== 0),\n            },\n        ];\n    }\n    if (children[0].categories) {\n        result = children[0].categories.map((category) => {\n            return {\n                title: category.title,\n                children: getChildrenByID(node, category.children),\n            };\n        });\n        result = sortOtherCategoryAtEnd(result);\n    } else {\n        // No categories, return all the children of the specified kind\n        console.assert(typeof children[0].children[0] === 'number');\n        result = [\n            {\n                title: '',\n                children: getChildrenByID(\n                    node,\n                    (children[0].children as unknown) as number[]\n                ),\n            },\n        ];\n    }\n    return result;\n}\n\n// See https://github.com/microsoft/tsdoc/blob/master/spec/code-snippets/DeclarationReferences.ts\n// This returns a fully qualified (non-ambiguous) permalink to this symbol\n// The \"(:)\" operator uses a \"selector\" after the colon.  It has these properties:\n//\n// - It is used in the absence of a TypeScript name, or to choose between things that have\n//   the same name.\n//\n// - For members of classes, the system-defined selectors are \"instance\" and \"static\"\n//\n// - For members of interfaces and enums, there are no system-defined selectors.\n//\n// - For merged declarations, the system-defined selectors are \"class\", \"enum\", \"function\",\n//   \"interface\", \"namespace\", \"type\", or \"variable\"\n//\n// - Class constructors use a special \"constructor\" selector that applies to the class itself.\n//\n// - Label selectors refer to declarations indicated using the {@label LABEL} tag.  The label\n//   must be all capitals (e.g. \"WITH_NUMBERS\") to avoid conflicts with system selectors.\n//\n// This returns a permalink structure made up of:\n// - anchor: a URL anchor that needs to be encoded and added\n// after a '#' and path to make it a full URL\n// - title: a string to be displayed as the name of the URL.\n\nfunction makePermalink(node: Reflection): Permalink | null {\n    // We need the actual node (not a reference)\n    // This is important for shouldIgnore(). It will return false for a reference\n    // as the tags are not accessible on a reference node\n    node = getReflectionByID(node.id);\n\n    if (!node || node.kind === 0) {\n        // kind = 0 -> file\n        return null;\n    }\n\n    if (node.sources?.[0]?.fileName.endsWith('/lib.dom.d.ts')) {\n        // This symbol is referenced from the DOM library (e.g. HTMLElement)\n        return {\n            document:\n                'https://developer.mozilla.org/en-US/docs/Web/API/' + node.name,\n            anchor: '',\n            title: node.name,\n        };\n    }\n\n    const parent = getParent(node);\n    if (!parent) {\n        // Some nodes are not in the tree of nodes and are not reachable\n        // For example temporary types that are not named, as in:\n        // `a: {b:T}`: `{b:T}` is an unreachable node\n        return { anchor: '', title: node.name ?? '' };\n    }\n    let result;\n    if (node.kind === 512) {\n        // Special syntax for constructors\n        const grandparentPermalink = makePermalink(getParent(parent));\n        if (grandparentPermalink) {\n            result = {\n                anchor:\n                    (grandparentPermalink.anchor\n                        ? grandparentPermalink.anchor + '.'\n                        : '') +\n                    parent.name +\n                    ':constructor',\n                title: 'new ' + parent.name + '()',\n            };\n        } else {\n            result = {\n                anchor: parent.name + ':constructor',\n                title: 'new ' + parent.name + '()',\n            };\n        }\n    } else {\n        const qualifiedSymbol = getQualifiedSymbol(parent, node);\n        const parentPermalink = makePermalink(parent);\n        const nodeName = getName(node);\n        result = parentPermalink\n            ? {\n                  anchor:\n                      (parentPermalink.anchor\n                          ? parentPermalink.anchor + '.'\n                          : '') + qualifiedSymbol,\n                  title: parentPermalink.title + '.' + nodeName,\n              }\n            : {\n                  anchor: qualifiedSymbol,\n                  title: nodeName,\n              };\n        // There's a bug in typedoc:\n        // https://github.com/TypeStrong/typedoc/issues/1284\n        // exported modules are returned as 'namespace' with a stringLiteral value\n        // if (\n        //     parent.kind === 1 ||\n        //     (parent.kind === 2 && /^\"(.*)\"$/.test(parent.name))\n        // ) {\n        //     result.title = nodeName;\n        // }\n    }\n    if (shouldIgnore(node)) {\n        result.anchor = '';\n    }\n    return result;\n}\n\n/**\n * Render a link to an item, inline\n * The permalink is made up of\n * - document: a valid URL\n * - anchor: an unescaped ID\n * - title: a string\n */\nfunction renderPermalink(permalink: Permalink, title?: string): string {\n    if (!permalink) return '';\n    title = title ?? permalink.title;\n    if (permalink.document && permalink.anchor) {\n        // This is an external reference (with an anchor)\n        return `<a href=\"${permalink.document}#${encodeURIComponent(\n            permalink.anchor\n        )}\">${title}</a>`;\n    } else if (permalink.document) {\n        // This is an external reference (without anchor)\n        return `<a href=\"${permalink.document}\">${title}</a>`;\n    } else if (permalink.anchor) {\n        // This is a reference to a local item (in this document)\n        return `<a href=\"#${encodeURIComponent(\n            permalink.anchor\n        )}\">${title}</a>`;\n    }\n    return title;\n}\n\n/**\n * Renders the \"anchor\" permalink displayed on hover\n * in the card header.\n */\nfunction renderPermalinkAnchor(permalink: Permalink): string {\n    // This should only be called for items that are in this document,\n    // so the permalink.document should be empty.\n    console.assert(!permalink.document);\n\n    return (\n        '<a class=\"permalink\" href=\"#' +\n        encodeURIComponent(permalink.anchor) +\n        '\" title=\"Permalink\"><span class=\"sr-only\"> Permalink </span>' +\n        '<svg><use xlink:href=\"#link\"></use></svg>' +\n        '</a>'\n    );\n}\n\n/**\n * Render a \"table of content\" for example for all the methods or\n * properties in a class.\n *\n * Each item name has a link to its full definition.\n *\n * The items are displayed in a short form without type info.\n *\n * The items are grouped by categories\n *\n * If there are 1 or none, no table is generated (don't need\n * a table with 1 item in it)\n */\nfunction renderIndex(\n    node: Reflection,\n    title?: string,\n    categories?: Category[],\n    options?: { symbolSuffix?: string }\n) {\n    if (!categories || categories.length === 0) return '';\n    let result = '';\n    if (title) {\n        result = heading(3, getQualifiedName(node), title);\n    }\n\n    // Don't display the index if there's only one item in it\n    if (\n        categories.length === 1 &&\n        filterInherited(filterPrivate(categories[0].children)).length <= 1\n    ) {\n        return result;\n    }\n\n    options = options || { symbolSuffix: '' }; // Could be '()' for functions/methods\n\n    return (\n        result +\n        categories\n            .map((category) => {\n                let r = '';\n                if (category.title) {\n                    r += `\\n\\n<h4>${category.title}</h4>\\n`;\n                }\n                let items = category.children.map((x) =>\n                    // Sometimes the children can be ID (for 'Types') for example\n                    typeof x === 'number' ? getReflectionByID(x) : x\n                );\n                items = items.filter((x) => {\n                    if (\n                        !x.inheritedFrom &&\n                        x.name?.[0] !== '#' &&\n                        !shouldIgnore(x)\n                    ) {\n                        if (x.signatures) {\n                            return (\n                                x.signatures.filter((x) => !shouldIgnore(x))\n                                    .length > 0\n                            );\n                        }\n                        return true;\n                    }\n                    return false;\n                });\n\n                r +=\n                    '\\n<div class=\"index\">' +\n                    list(\n                        items.map((x) =>\n                            renderPermalink(\n                                makePermalink(x),\n                                getName(x) + options.symbolSuffix\n                            )\n                        )\n                    ) +\n                    '\\n</div>\\n';\n                return r;\n            })\n            .join('\\n')\n    );\n}\n\n// A flag is usually a typescript keyword modifying an entry,\n// for example 'protected' -> 'isProtected' or 'optional' -> 'isOptional'\nfunction hasFlag(\n    node: Reflection,\n    flag: 'isProtected' | 'isOptional' | 'isStatic' | 'isAbstract' | 'isRest'\n): boolean {\n    return node?.flags?.[flag];\n}\n\n// A tag is a JSDOC notation, such as '@param' or '@example'\n// See https://typedoc.org/guides/doccomments/\nfunction getTag(node: Reflection, tag: Tag): string {\n    if (node?.comment?.tags) {\n        const result = node.comment.tags.filter((x) => x.tag === tag);\n        // It *could* happen, but we're not ready to deal with that...\n        console.assert(result.length <= 1);\n        if (result.length === 1) {\n            return result[0].text || '';\n        }\n    }\n    return '';\n}\n\n/**\n *  Return true if a tag is present (but its content could be empty)\n */\n\nfunction hasTag(node: Reflection, tag: Tag) {\n    return (\n        node?.comment?.tags &&\n        node.comment.tags.filter((x) => x.tag === tag).length > 0\n    );\n}\n\nfunction getKeywords(node: Reflection): string[] {\n    if (node.signatures && !node.comment) {\n        return getKeywords(node.signatures[0]);\n    }\n    let keywords = getTag(node, 'keywords');\n    if (!keywords && hasTag(node, 'keyword' as any)) {\n        console.warn(\n            'The tag for keywords is \"@keywords\", not \"@keyword\" ',\n            getQualifiedName(node)\n        );\n        keywords = getTag(node, 'keyword' as any);\n    }\n\n    let result = (keywords ?? '').split(',');\n\n    result.push(\n        {\n            2: 'namespace',\n            4: 'enum',\n            32: 'variable',\n            16: '', // Enum member\n            64: 'function',\n            128: 'class',\n            256: 'interface',\n            1024: '', // property, no selector (unless parent is class, see below)\n            2048: '', // method, handled below\n            4096: 'function', // call signature (functions)\n            262144: 'instance', // get/set\n            524288: 'instance', // get signature (getter without setter)\n            4194304: 'type', // 131072? 65535?\n        }[node.kind] ?? ''\n    );\n\n    result.push(getName(node));\n\n    if (hasTag(node, 'category' as any)) {\n        const category = getTag(node, 'category' as any)\n            .split(' ')\n            .map((x) => x.toLowerCase().trim());\n        result = [...result, ...category];\n    }\n\n    // Add synonyms\n    result = [].concat(\n        ...result.map((word) => {\n            if (gOptions.keywordSynonyms?.hasOwnProperty(word) ?? false) {\n                return [word, ...gOptions.keywordSynonyms[word]];\n            }\n            return [word];\n        })\n    );\n\n    // Remove empty keywords, normalize to lowercase\n    result = result\n        .filter((x) => !!x)\n        .map((x: string) => x.trim().toLowerCase());\n\n    // Remove duplicates\n    return [...new Set(result)];\n}\n\nfunction renderFlags(node: Reflection, style = 'block') {\n    if (!node) return '';\n    let result = '';\n    if (node.flags) {\n        if (node.flags.isAbstract) result += span('abstract', 'modifier-tag');\n        if (node.flags.isPrivate) result += span('private', 'modifier-tag');\n        if (node.flags.isProtected) result += span('protected', 'modifier-tag');\n        if (node.flags.isPublic) result += span('public', 'modifier-tag');\n        // The 'exported' flag is low information in a public API. Skip it.\n        // if (json.isExported) result += span('exported', 'modifier-tag');\n        if (node.flags.isExternal) result += span('external', 'modifier-tag');\n        if (node.flags.isStatic) result += span('static', 'modifier-tag');\n    }\n\n    const TAGS: {\n        [tag: string]: 'red modifier-tag' | 'orange modifier-tag' | '';\n    } = {\n        // command: '', // @command: indicate commands dispatched with .perform()\n        eventproperty: '',\n        override: '',\n        // public: '',  // @public is not a block tag: it gets converted to a flag\n        // private: '',  // @private is not a block tag: it gets converted to a flag\n        // protected: '',  // @protected is not a block tag: it gets converted to a flag\n        readonly: '',\n        sealed: '',\n        virtual: '',\n        deprecated: 'red modifier-tag',\n        // internal: 'red', // Items with a @internal tag are ignored\n        beta: 'orange modifier-tag',\n        alpha: 'orange modifier-tag',\n        experimental: 'orange modifier-tag',\n    };\n    const TAG_NAME = {\n        eventproperty: 'event',\n        readonly: 'read only',\n    };\n    result += Object.keys(TAGS)\n        .map((x) =>\n            hasTag(node, x as Tag)\n                ? span(TAG_NAME[x] || x, TAGS[x] || 'modifier-tag')\n                : ''\n        )\n        .join('');\n\n    return result\n        ? style === 'block'\n            ? div(result, 'flags')\n            : span(result, 'flags')\n        : '';\n}\n\n/**\n * JSDOC tags...\n * See https://github.com/microsoft/tsdoc/blob/master/tsdoc/src/details/StandardTags.ts for the list of supported tags\n */\nfunction renderTag(node: Reflection, tag: string, text: string) {\n    if (!tag || !text) return '';\n    let result = '';\n    text = trimNewline(text.trim()) || '';\n    switch (tag) {\n        case 'method':\n            result +=\n                '<strong>Method:</strong> ' +\n                markdown.render(renderLinkTags(node, text));\n            break;\n        case 'module':\n            result +=\n                '<strong>Module:</strong> ' +\n                markdown.render(renderLinkTags(node, text));\n            break;\n        case 'function':\n            result +=\n                '<strong>Function:</strong> ' +\n                markdown.render(renderLinkTags(node, text));\n            break;\n        case 'example':\n            result +=\n                '\\n<pre><code>' +\n                highlightJs.highlight('typescript', text).value +\n                '</code></pre>\\n';\n            break;\n        case 'typedef':\n        case 'type':\n        case 'property':\n        case 'param':\n        case 'returns':\n            // Those tags are emitted for type definition\n            // but they are redundant...\n            break;\n        case 'privateremarks':\n            // This comment is for internal use only. Do not output it\n            // in the API documentation.\n            break;\n        case 'packageDocumentation':\n            // This tag indicates this is the top-level documentation\n            // We handle it separately, no need to emit it here.\n            break;\n        case 'category':\n            // Categories/topics are handled separately\n            break;\n        case 'global':\n            // Globals are grouped together and indicated separately\n            break;\n        case 'keywords':\n            // Keywords are handled separately\n            break;\n        case 'command':\n            // The @command tag indicates that the properties of a class or\n            // interface specify the selectors of a command to be invoked with\n            // the code which is the value of the @command tag. This is handled\n            // separately and should not be displayed as a regular tag.\n            break;\n\n        case 'keyword':\n            console.warn(\n                'Unexpected tag \"@keyword\" in ' +\n                    node.name +\n                    '. Did you mean \"@keywords\"?'\n            );\n        // fall through\n\n        default:\n            if (text) {\n                const noticeStyle =\n                    {\n                        eventproperty: 'info',\n                        override: 'info',\n                        public: 'info',\n                        readonly: 'info',\n                        sealed: 'info',\n                        virtual: 'info',\n                        alpha: 'warning',\n                        beta: 'warning',\n                        experimental: 'warning',\n                        deprecated: 'danger',\n                        internal: 'danger',\n                    }[tag] || 'info';\n                const tagLabel = { eventproperty: 'event' }[tag] || tag;\n                // Add a notice style\n                result += section(\n                    '<h4>' +\n                        tagLabel +\n                        '</h4>\\n\\n' +\n                        markdown.render(renderLinkTags(node, text)),\n                    { className: 'notice--' + noticeStyle }\n                );\n            } else if (\n                !/alpha|beta|deprecated|eventproperty|experimental|internal|override|public|readonly|sealed|virtual/i.test(\n                    tag\n                )\n            ) {\n                result += '<strong>' + tag + '</strong>';\n            } else {\n                // console.log('Unexpected tag ' + tag);\n            }\n    }\n    return result;\n}\n\nfunction escapeYAMLString(str: string): string {\n    return str.replace(/([^\\\\])'/g, \"$1\\\\'\");\n}\n\nfunction trimQuotes(str: string): string {\n    return str.replace(/(^\")|(\"$)/g, '');\n}\n\nfunction trimNewline(str: string): string {\n    return str.replace(/(\\n+)$/g, '');\n}\n\nfunction isVoid(node: Reflection): boolean {\n    // Both values can be returned. Not sure when, or if that's intentional...\n    return (\n        node.type === 'void' ||\n        (node.type === 'intrinsic' && node.name === 'void')\n    );\n}\n\n/**\n * A symbol is for example the name of a type (\"T\") or class (\"C\")\n * or a method (\"f\") or property (\"p\").\n *\n * A qualified symbol adds a \"selector\" that is used to disambiguate\n * the symbol. For example \"f\" could refer either to an instance method\n * of a class, a static method of a class, or a member of an interface.\n *\n * Their respective qualified version would be:\n * \"(f:instance)\", \"(f:static)\" and \"f\"\n *\n * Note this function returns \"full\" qualified symbols:\n * when it's not ambiguous, the selector can be omitted to form\n * a short qualified name, for example if there's only a static\n * method, \"f\" is acceptable. However, the symbols we generate\n * (for anchor links) are always fully qualified, while the\n * ones we interpret (reading from @link, for example), don't\n * have to be.\n *\n */\n\nfunction getQualifiedSymbol(parent: Reflection, node: Reflection): string {\n    if (node.kind === 0) {\n        // File-level\n        return '';\n    }\n    if (node.kind === 1) {\n        // This is a module\n        console.assert(parent.kind === 0);\n        if (parent.children.length === 1) {\n            // And there is a single module in this file\n            return '';\n        }\n        return '(\"' + getModuleName(node) + '\":module)';\n    }\n    if (node.kind === 2) {\n        // Namespace.\n        // There's a bug in typedoc:\n        // https://github.com/TypeStrong/typedoc/issues/1284\n        // exported modules are returned as 'namespace' with a stringLiteral value\n        if (/^\"(.*)\"$/.test(node.name)) {\n            return '(\"' + trimQuotes(node.name) + '\":module)';\n        }\n        return '(' + node.name + '\":namespace)';\n    }\n    if (node.type === 'reference') {\n        // If this is a reference, resolve it.\n        // For example in 'Keys<Commands>' 'Keys' is a reference to the\n        // type 'Keys'\n        node = getReflectionByID(node.id);\n    }\n    const symbol = node.name;\n    let selector = {\n        2: 'namespace',\n        4: 'enum',\n        32: 'variable',\n        16: '', // Enum member\n        64: 'function',\n        128: 'class',\n        256: 'interface',\n        1024: '', // property, no selector (unless parent is class, see below)\n        2048: '', // method, handled below\n        4096: 'function', // call signature (functions)\n        262144: 'instance', // get/set\n        524288: 'instance', // get signature\n        4194304: 'type', // 131072? 65535?\n        16777216: 'reference', //\n    }[node.kind];\n    console.assert(typeof selector !== 'undefined');\n    if (node.kind === 512) {\n        // Constructor (special syntax)\n        // Note: this code should never be reached,\n        // this case is handled in makePermalink()\n        return ':constructor';\n    }\n    // See https://github.com/microsoft/tsdoc/blob/master/spec/code-snippets/DeclarationReferences.ts\n    // for the list of standard selectors\n    if (parent && parent.kind === 128) {\n        // If the parent is a class, use a 'static' or 'instance'\n        // selector for properties (1024) and methods (2048)\n        if (node.kind === 1024 || node.kind === 2048) {\n            if (node.flags?.isStatic) {\n                selector = 'static';\n            } else {\n                selector = 'instance';\n            }\n        }\n    } else if (parent?.kind === 256) {\n        // There's no selector for members of interfaces\n        selector = '';\n    }\n    const label = getTag(node, 'label');\n    if (label) {\n        // If there's an explicit @label set, use it as a selector\n        selector = label;\n    }\n\n    return selector ? `(${symbol}:${selector})` : symbol;\n}\n\n// Return 'class', 'abstract class', 'interface, 'enum'\n// when appropriate\nfunction getQualifiedName(node: Reflection): string {\n    if (!node || node.kind === 0) return '';\n    if (node.kind === 128 && hasFlag(node, 'isAbstract')) {\n        // Class\n        return (\n            keyword('abstract class ') +\n            '<strong>' +\n            getName(node) +\n            '</strong>'\n        );\n    }\n    // There's a bug in typedoc:\n    // https://github.com/TypeStrong/typedoc/issues/1284\n    // exported modules are returned as 'namespace' with a stringLiteral value\n    // if (node.kind === 2 && /^\"(.*)\"$/.test(node.name)) {\n    //     return (\n    //         keyword('module ') +\n    //         '<strong>\"' +\n    //         trimQuotes(node.name).replace(/\\.d$/, '') +\n    //         '\"</strong>'\n    //     );\n    // }\n    if (node.kind === 1) {\n        return keyword('module ') + '<strong>\"' + getName(node) + '\"</strong>';\n    }\n    return (\n        keyword(\n            {\n                256: 'interface ',\n                128: 'class ',\n                4: 'enum ',\n                2: 'namespace ',\n                1: 'module ',\n            }[node.kind] ?? ''\n        ) +\n        '<strong>' +\n        getName(node) +\n        '</strong>'\n    );\n}\n\n// See: https://github.com/microsoft/tsdoc/blob/master/spec/code-snippets/DeclarationReferences.ts\n// link is a string, representing a potentially non-resolved symbol, for\n// example \"Foo\", or a resolved one: \"(Foo:variable)\"\n// or \"(Foo:class).(Bar.function)\" or \"https://host.com/path/#Foo\"\n// or \"@module/path/director#Foo\"\n\nfunction resolveLink(node: Reflection, link: string): string {\n    if (/^http[s]?:\\/\\//.test(link)) {\n        // It's a regular URL\n        return link;\n    }\n    if (!getReflectionByLink(link, node)) {\n        // Check that the link actually resolves to a reflection\n        console.warn('Unresolved link in \"' + node.name + '\": ', link);\n        // Even if it doesn't, we can still generate a URL, but it\n        // likely won't point to anywhere.\n    }\n    let result = '';\n    const imports = link.split('#');\n    if (imports.length > 1) {\n        result = imports[0];\n        // Omit what comes before '#'\n        link = imports.slice(1).join('');\n        // @todo: resolve external references. Maybe have a mapping table\n        // specified with @externallink foo=href ?\n    }\n    const linkSegments = link.split('.');\n    let root = gNodes;\n    linkSegments.forEach((linkSegment) => {\n        root = getReflectionByLink(linkSegment, root);\n    });\n\n    return root\n        ? result + '#' + encodeURIComponent(makePermalink(root).anchor)\n        : result + '#' + linkSegments.join('.');\n}\n\nfunction getTutorial(path: string): string {\n    if (!gOptions.tutorialPath) return path;\n    if (!gOptions.tutorialPath.endsWith('/')) {\n        return gOptions.tutorialPath + '/' + path;\n    }\n    return gOptions.tutorialPath + path;\n}\n\n/**\n * Return a list of reflection, with private symbols (e.g '#foo') removed\n */\nfunction filterPrivate(list: Reflection[]): Reflection[] {\n    return list.filter((x) => x.name?.[0] !== '#');\n}\n\nfunction filterInherited(list: Reflection[]): Reflection[] {\n    return list.filter((x) => !x.inheritedFrom);\n}\n\n/**\n * Render the JSDOC links that may be included in comments.\n *\n * These links could point to symbols in this file, or to some external\n * resources\n *\n */\n\nfunction renderLinkTags(node: Reflection, str: string) {\n    str = str.replace(\n        /{@tutorial\\s+(\\S+?)[ \\|]+(.+?)}/g,\n        (_match, p1, p2) => `<a href=\"${getTutorial(p1)}\">${p2}</a>`\n    );\n    str = str.replace(\n        /{@tutorial\\s+(\\S+?)}/g,\n        (_match, p1) => `<a href=\"${getTutorial(p1)}\">${p1}</a>`\n    );\n\n    // @linkcode and [[``]]...\n    // ... with title\n    str = str.replace(\n        /{@linkcode\\s+(\\S+?)\\s*\\|\\s*(.+?)}/g,\n        (_match, p1, p2) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p2}</code></a>`\n    );\n    // ... no title\n    str = str.replace(\n        /{@linkcode\\s+(\\S+?)}/g,\n        (_match, p1) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p1}</code></a>`\n    );\n    // ... [[`` | ]]\n    str = str.replace(\n        /\\[\\[\\`(\\S+?)\\`\\s*\\|\\s*(.+?)\\]\\]/g,\n        (_match, p1) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p1}</code></a>`\n    );\n    // ... [[``]]\n    str = str.replace(\n        /\\[\\[\\`(\\S+?)\\`\\]\\]/g,\n        (_match, p1) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p1}</code></a>`\n    );\n\n    // Plain link...\n    // ... @link and @linkplain with title\n    str = str.replace(\n        /{@(?:link|linkplain)\\s+(\\S+?)\\s*\\|\\s*(.+?)}/g,\n        (_match, p1, p2) => `<a href=\"${resolveLink(node, p1)}\">${p2}</a>`\n    );\n\n    // ... @link and @linkplain no title\n    str = str.replace(\n        /{@(?:link|linkplain)\\s+(\\S+?)}/g,\n        (_match, p1) => `<a href=\"${resolveLink(node, p1)}\">${p1}</a>`\n    );\n\n    // ... [[ | ]] with title\n    str = str.replace(\n        /\\[\\[(\\S+?)\\s*\\|\\s*(.+?)\\]\\]/g,\n        (_match, p1, p2) => `<a href=\"${resolveLink(node, p1)}\">${p2}</a>`\n    );\n\n    // ... [[]]\n    str = str.replace(\n        /\\[\\[(\\S+?)\\]\\]/g,\n        (_match, p1) => `<a href=\"${resolveLink(node, p1)}\">${p1}</a>`\n    );\n\n    // {@inheritDoc ...}\n    str = str.replace(/({@(?:inheritDoc)\\s+(\\S+?)})/gi, (_match, p1, p2) => {\n        if (!p1.startsWith('{@inheritDoc')) {\n            console.warn('Check capitalization of @inheritDoc', p1);\n        }\n        const source = getReflectionByLink(p2, node);\n        if (!source) {\n            console.warn('Unresolved link in \"' + node.name + '\": ', p1);\n            return p1;\n        }\n        return render(source, 'block-inherit'); // As a block, but exclude tags and @example\n    });\n\n    return str;\n}\n\n/**\n */\n\nfunction renderNotices(node: Reflection, str: string): string {\n    const lines = str.split('\\n');\n    const blocks = [];\n    let inShortBlock = false;\n    let inLongBlock = false;\n    let currentBlock = [];\n    let currentType = '';\n    lines.forEach((line) => {\n        if (inShortBlock) {\n            // Looking for an empty line\n            const m = line.match(/^\\s*$/i);\n            if (m) {\n                if (currentBlock.length > 0) {\n                    blocks.push({\n                        type: currentType,\n                        content: currentBlock.join('\\n'),\n                    });\n                }\n                inShortBlock = false;\n                currentType = '';\n                currentBlock = [];\n            } else {\n                // Still in a short block\n                currentBlock.push(line);\n            }\n        } else if (inLongBlock) {\n            // Looking for a '---' or '***' at the begining of the line\n            if (/^[ ]{0,3}(\\*\\*\\*|---)/.test(line)) {\n                if (currentBlock.length > 0) {\n                    blocks.push({\n                        type: currentType,\n                        content: currentBlock.join('\\n'),\n                    });\n                }\n                inLongBlock = false;\n                currentType = '';\n                currentBlock = [];\n            } else {\n                // Still in a long block\n                currentBlock.push(line);\n            }\n        } else {\n            // Looking for a notice tag at the start of the line:\n            // '**(note)**', etc..\n            let m = line.match(/\\n*\\*\\*\\(([^]+)\\):?\\s*\\*\\*\\s*:?\\s*([^]+)/i);\n            if (m) {\n                // Found a short note\n                if (currentBlock.length > 0) {\n                    blocks.push({\n                        type: currentType,\n                        content: currentBlock.join('\\n'),\n                    });\n                }\n                inShortBlock = true;\n                currentType = m[1];\n                currentBlock = [m[2]];\n            } else {\n                m = line.match(/\\n*\\*\\*\\(([^]+)\\):?\\s*\\*\\*\\s*:?\\s*$/i);\n                if (m) {\n                    // Found a long note\n                    if (currentBlock.length > 0) {\n                        blocks.push({\n                            type: currentType,\n                            content: currentBlock.join('\\n'),\n                        });\n                    }\n                    inLongBlock = true;\n                    currentType = m[1];\n                    currentBlock = [];\n                } else {\n                    // Nothing special\n                    currentBlock.push(line);\n                }\n            }\n        }\n    });\n    if (currentBlock.length > 0) {\n        blocks.push({ type: currentType, content: currentBlock.join('\\n') });\n    }\n    return blocks\n        .map((block) => {\n            if (block.type) {\n                const noticeType =\n                    {\n                        danger: 'danger',\n                        warning: 'warning',\n                        caution: 'warning',\n                    }[block.type.toLowerCase()] || 'info';\n                return div(\n                    `<h4>${block.type}</h4>\\n` +\n                        markdown.render(renderLinkTags(node, block.content)),\n                    'notice--' + noticeType\n                );\n            }\n            return markdown.render(renderLinkTags(node, block.content));\n        })\n        .join('\\n');\n}\n\nfunction renderComment(node: Reflection, style: string): string {\n    if (!node) return '';\n    if (node.signatures && !node.comment) {\n        return renderComment(node.signatures[0], style);\n    }\n    if (!node.comment) return '';\n    let result = '';\n    const newLine = '\\n';\n\n    if (node.comment.shortText) {\n        result += renderNotices(node, node.comment.shortText) + newLine;\n    }\n    if (node.comment.text) {\n        result += renderNotices(node, node.comment.text) + newLine;\n    }\n    const remarks = getTag(node, 'remarks');\n    if (remarks) {\n        result += renderNotices(node, remarks) + newLine;\n    }\n    if (style !== 'block-inherit') {\n        if (node.comment.tags && node.comment.tags.length > 0) {\n            result +=\n                newLine +\n                node.comment.tags\n                    .map((x) => renderTag(node, x.tag, x.text))\n                    .filter((x) => !!x)\n                    .join(newLine + newLine) +\n                newLine;\n        }\n    }\n    return result;\n}\n\nfunction getModuleName(node): string {\n    if (!node) return '';\n    if (node.kind === 1) {\n        const result = trimQuotes(node.name).replace(/\\.d$/, '');\n        return result.match(/\\/([a-z0-9_-]*[\\/]?)$/)?.[1] ?? result;\n    }\n    return getModuleName(getParent(node));\n}\n\nfunction shouldIgnore(node: Reflection): boolean {\n    // @hidden and @ignore are synonyms. The nodes for these symbols are not\n    // even created.\n    // @internal will result in nodes being created, unless --strip-internal is\n    // true (which it isn't).\n    // @internal is in general a better tag, as it allows us to distinguish\n    // between an @internal symbols (which should not be documented) and an\n    // external symbol (which has an external link)\n    return (\n        hasTag(node, 'hidden') ||\n        hasTag(node, 'ignore') ||\n        hasTag(node, 'internal') ||\n        node.name[0] === '#' // Private symbols (starts with '#')...\n    );\n}\n\n/**\n * Render a card with a header, content and footer\n */\n\nfunction renderCard(\n    node: Reflection,\n    displayName: string,\n    content: string\n): string {\n    const parent = getParent(node);\n    if (!displayName) {\n        displayName = `<strong>${getName(node)}</strong>`;\n        // If enum, variable (property), function (method), class,\n        // interface\n        if (\n            node.kind === 4 ||\n            node.kind === 32 ||\n            node.kind === 64 ||\n            node.kind === 128 ||\n            node.kind === 256 ||\n            node.kind === 1024 ||\n            node.kind === 2048\n        ) {\n            if (\n                parent &&\n                ((parent.kind === 2 && !/^\"(.*)\"$/.test(parent.name)) ||\n                    parent.kind === 128 ||\n                    parent.kind === 256)\n            ) {\n                // Parent is a namespace or class or interface\n                displayName = getName(parent) + punct('.') + displayName;\n            }\n        }\n        if (node.kind === 64) {\n            // Function\n            displayName += punct('()');\n        }\n    }\n\n    const permalink = makePermalink(node);\n    // The permalink should refer to this document (and therefore be empty)\n    console.assert(!permalink.document);\n\n    const header = heading(\n        3,\n        getQualifiedName(parent),\n        displayName,\n        permalink,\n        { deprecated: hasTag(node, 'deprecated') }\n    );\n    return section(header + content, {\n        permalink,\n        className: 'card',\n        keywords: getKeywords(node).join(', '),\n    });\n}\n\n/**\n * Each function or methods has its own separate card\n * json.kind =\n * - 64: function\n * - 512: constructor\n * - 2048: method\n *\n */\nfunction renderMethodCard(node: Reflection): string {\n    if (shouldIgnore(node)) return '';\n\n    // The @command tag can be placed either on each individual entry\n    // or on the interface/class that groups them\n    const result = renderCommandCard(node);\n    if (result) return result;\n\n    const parent = getParent(node);\n    let displayName = '';\n    let shortName = '';\n    if (node.kind === 512) {\n        // Constructor\n        // Constructors *always* have a (class) parent\n        displayName = `${keyword('new ')}<strong>${parent.name}</strong>`;\n        shortName = displayName;\n    } else {\n        shortName = `<strong>${node.name}</strong>`;\n        displayName = shortName;\n    }\n\n    // Display one or more function signatures,\n    // which include a summary of the signature, e.g.\n    // - function foo.bar(x: string): number\n    // - comments about this function\n    // - details about each of the arguments\n    const signatures = node.signatures.filter((x) => !shouldIgnore(x));\n    if (signatures.length === 0) return '';\n    return renderCard(\n        node,\n        displayName,\n        renderComment(node, 'block') +\n            div(\n                signatures\n                    .map((signature) => {\n                        let result = renderFlags(signature);\n                        // Display the \"short\" signature (kind 4096)\n                        result += div(\n                            shortName + render(signature, 'inline'),\n                            'code'\n                        );\n\n                        // Display info about each of the params...\n                        result += render(signature, 'block');\n\n                        return div(result);\n                    })\n                    .join('\\n<hr>\\n')\n            )\n    );\n}\n\n/**\n * Card for an accessor (get/set)\n */\nfunction renderAccessorCard(node: Reflection) {\n    if (shouldIgnore(node)) return '';\n\n    let displayName = '';\n\n    if (node.getSignature && node.setSignature) {\n        // set/get\n        displayName = keyword('get/set ') + `<strong>${node.name}</strong>`;\n    } else if (node.getSignature) {\n        // get only\n        displayName = keyword('get ') + `<strong>${node.name}</strong>`;\n    } else {\n        // set only\n        displayName = keyword('set ') + `<strong>${node.name}</strong>`;\n    }\n\n    const signature = node.getSignature\n        ? node.getSignature[0]\n        : node.setSignature[0];\n    let body = node.name + punct(': ') + render(signature.type, 'inline');\n    if (node.getSignature && !node.setSignature) {\n        body += '&nbsp;&nbsp;' + span('read only', 'modifier-tag');\n    } else if (!node.getSignature && node.setSignature) {\n        body += '&nbsp;&nbsp;' + span('write only', 'modifier-tag');\n    }\n\n    return renderCard(\n        node,\n        displayName,\n        div(body) + renderComment(node, 'block')\n    );\n}\n\n/**\n * A class section is a top level section containing a table of content\n * (for each member method/property), grouped by categories,\n * followed by a card for each method/property\n */\n\nfunction renderClassSection(node: Reflection): string {\n    // If it's just a forward declaration, e.g.\n    // `declare class Mathfield{}`\n    // there are no children (methods, etc...) to inspect and we don't render it.\n    if (shouldIgnore(node) || !node.children) return '';\n\n    if (\n        node.groups.length === 1 &&\n        (node.groups[0].kind & (1024 | 2048)) !== 0 &&\n        !hasTag(node, 'command')\n    ) {\n        // There's a single group (all the children are the same kind)\n        // and all the children are properties or methods\n        return render(node, 'card');\n    }\n\n    const permalink = makePermalink(node);\n    const parent = getParent(node);\n\n    const result =\n        heading(\n            2,\n            getQualifiedName(parent),\n            getQualifiedName(node),\n            permalink,\n            { deprecated: hasTag(node, 'deprecated') }\n        ) + renderFlags(node);\n\n    let body = '';\n    if (node.extendedTypes) {\n        body +=\n            '<p>' +\n            span('Extends', 'class-label') +\n            node.extendedTypes\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(', ') +\n            '</p>';\n    }\n\n    if (node.implementedTypes && node.implementedTypes.length > 0) {\n        if (node.implementedTypes.length > 0) {\n            body +=\n                '<p>' +\n                span('Implements', 'class-label') +\n                node.implementedTypes\n                    .map((x) => render(x))\n                    .filter((x) => !!x)\n                    .join(', ') +\n                '</p>';\n        }\n    }\n\n    if (node.extendedBy) {\n        body +=\n            '<p>' +\n            span('Extended by', 'class-label') +\n            node.extendedBy\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(', ') +\n            '</p>';\n    }\n\n    if (node.implementedBy) {\n        // The class is sometimes in its own \"implementedBy\" list\n        const implementedBy = node.implementedBy.filter(\n            (x) => x.id !== node.id\n        );\n        if (implementedBy.length > 0) {\n            body +=\n                '<p>' +\n                span('Implemented by', 'class-label') +\n                implementedBy\n                    .map((x) => render(x))\n                    .filter((x) => !!x)\n                    .join(', ') +\n                '</p>';\n        }\n    }\n\n    return section(result + div(body) + renderGroups(node), { permalink });\n}\n\n/**\n * Classes and interfaces are usually rendered as a header, some comment,\n * followed by a card for each of its member.\n *\n * However, if the interface/class is 'simple' (all members are properties\n * or all members are methods, and few comments) the class/interface\n * is rendered as a single card.\n * The decision is made in renderClassSection()\n */\n\nfunction renderClassCard(node) {\n    if (shouldIgnore(node) || !node.children) return '';\n    let comment = renderComment(node, 'block');\n    if (comment) comment += '\\n<hr>\\n';\n    let body = '';\n    if (node.children) {\n        body =\n            '<dl><dt id=\"' +\n            filterPrivate(node.children)\n                .map((x: Reflection) => {\n                    const permalink = makePermalink(x);\n                    let r = encodeURIComponent(permalink.anchor) + '\">';\n                    if (x.kind === 2048) {\n                        // Method\n                        r +=\n                            x.signatures\n                                .map((signature) => {\n                                    let sigResult =\n                                        renderFlags(x, 'inline') +\n                                        '<strong>' +\n                                        x.name +\n                                        '</strong>';\n                                    if (hasFlag(x, 'isOptional')) {\n                                        sigResult += span('?', 'modifier');\n                                    }\n                                    sigResult +=\n                                        renderPermalinkAnchor(permalink) +\n                                        render(signature) +\n                                        '</dt><dd>' +\n                                        renderComment(signature, 'block');\n                                    return sigResult;\n                                })\n                                .join('</dd><dt>') + '</dd>';\n                    } else if (x.kind === 1024) {\n                        // Property\n                        r += '<strong>' + x.name + '</strong>';\n                        if (hasFlag(x, 'isOptional')) {\n                            r += span('?', 'modifier');\n                        }\n                        r +=\n                            punct(': ') +\n                            render(x.type as Reflection) +\n                            renderPermalinkAnchor(permalink) +\n                            '</dt><dd>' +\n                            renderComment(x, 'block');\n                    } else {\n                        // Only expected a property or a method\n                        // in a \"short\" class/interface\n                        console.error(\n                            'Unexpected item in a \"short\" class/interface'\n                        );\n                    }\n                    return r;\n                })\n                .join('\\n</dd><dt id=\"');\n        body += '\\n</dd></dl>\\n';\n    }\n    return renderCard(node, getQualifiedName(node), comment + body);\n}\n\n/**\n * A command is identified by a selector and dispatched with another\n * function, for example the \"selectAll\" selector and `perform(\"selectAll\")`\n * A command can be specified either as a property (of type function) or a\n * function (typically in an interface).\n * The @command tag on the interface indicates that the properties/methods\n * of the interface should be interepreted as methods.\n */\nfunction renderCommandCard(node) {\n    const parent = getParent(node);\n    const commandTag = (\n        getTag(node, 'command') || getTag(parent, 'command')\n    ).trim();\n    if (!commandTag) return '';\n\n    let signature;\n    if (node.kind === 1024) {\n        // It's a property\n        if (!node.type.declaration) return '';\n        signature = node.type.declaration.signatures[0];\n    } else if (node.kind === 2048) {\n        // A method\n        signature = node.signatures[0];\n    } else {\n        return '';\n    }\n    const params = [...signature.parameters];\n\n    let result = commandTag + punct('(');\n    params.shift(); // The sender\n    if (params.length > 0) {\n        result += punct('[');\n        result += span('\"' + node.name + '\"', 'string-literal');\n        result += punct(', ');\n        result += params.map((x) => render(x)).join(punct(', '));\n        result += punct(']');\n    } else {\n        // No extra params, just the selector\n        result += span('\"' + node.name + '\"', 'string-literal');\n    }\n    result += punct(')');\n    if (signature.type) {\n        result += punct(': ');\n        result += render(signature.type);\n    }\n\n    if (params.length > 0 || signature.type) {\n        result += '\\n<dl>\\n';\n\n        if (params.length > 0) {\n            // Display each of the additional parameters, and their info\n            result +=\n                '\\n<dt>\\n' +\n                params\n                    .map((param) => {\n                        let r =\n                            '<strong><var>' + param.name + '</var></strong>';\n                        const typeDef = render(param.type, 'block');\n                        if (typeDef) {\n                            r += punct(': ') + typeDef;\n                        }\n                        r += '\\n</dt><dd>\\n';\n                        r += renderComment(param, 'block');\n                        return r;\n                    })\n                    .join('\\n</dd><dt>\\n');\n            result += '\\n</dd>\\n';\n        }\n        if (signature.type && hasTag(node, 'returns')) {\n            // The is a return type\n            result += '\\n<dt>\\n';\n            result += '<strong>→ </strong>' + render(signature.type);\n            result += '\\n</dt><dd>\\n';\n            if (hasTag(node, 'returns')) {\n                result += renderNotices(node, getTag(node, 'returns'));\n            }\n            result += '\\n</dd>\\n';\n        }\n        result += '\\n</dl>\\n';\n    }\n    result = div(result, 'code');\n\n    return renderCard(\n        node,\n        // Note: the '&#8203;' (zws) after 'command' is important to ensure\n        // that double-clicking on the name selects only the name\n        span('command', 'modifier-tag') +\n            '<strong>' +\n            '&#8203;' +\n            node.name +\n            '</strong>',\n        result + renderComment(node, 'block')\n    );\n}\n\n/**\n * Interfaces and classes have properties (which can be functions)\n * This renders a card for a property\n * kind = 1024\n */\nfunction renderPropertyCard(node) {\n    if (shouldIgnore(node)) return '';\n\n    // The @command tag can be placed either on each individual entry\n    // or on the interface/class that groups them\n    const result = renderCommandCard(node);\n    if (result) return result;\n\n    const parent = getParent(node);\n    let displayName = '';\n    let shortName = '';\n    if (parent && (parent.kind & (1 | 2 | 4 | 128 | 256)) !== 0) {\n        // Parent is a module, namespace, enum, class or interface\n        // Function or method\n        shortName = `<strong>${node.name}</strong>`;\n        displayName = parent.name + '.' + shortName;\n    }\n    return renderCard(\n        node,\n        displayName,\n        render(node.type, 'block') + renderComment(node, 'block')\n    );\n}\n\n/**\n * A card for an enum\n * kind = 4\n */\nfunction renderEnumCard(node: Reflection): string {\n    if (shouldIgnore(node)) return '';\n    let comment = renderComment(node, 'block');\n    let body = '';\n    if (node.children) {\n        if (comment) comment += '\\n<hr>';\n        body += '\\n<dl>';\n        body += node.children\n            .map((enumMember) => {\n                return render(enumMember, 'block');\n            })\n            .join('');\n        body += '</dl>';\n    }\n    return renderCard(node, '', comment + body);\n}\n\nfunction renderTypeAliasCard(node: Reflection): string {\n    if (shouldIgnore(node)) return '';\n    let result = renderComment(node, 'block');\n    const typeDef = render(node, 'block');\n    if (typeDef) {\n        if (result) {\n            result += '\\n<hr>\\n';\n        }\n        result += div(typeDef, 'code');\n    }\n    return renderCard(node, '', result);\n}\n\n/**\n * Groups are a collection of related items (for example all variables,\n *  all types, all functions, etc...) while `node.children` are all\n * of these items, but in their declaration order.\n *\n * Only used when in 'card' style.\n *\n * Groups have a 'children' property which is an array of ID\n *  referring to the items\n */\nfunction renderGroup(node: Reflection, group: Reflection): string {\n    const topics = getCategories(node, group.kind);\n    // If there are any children, there should always be at least\n    // one \"Other\" topic\n    if (topics.length === 0) return '';\n    // Render heading for group, e.g. \"Types\"... and index\n    let header = '';\n    if (\n        group.kind !== 512 && // 'Constructors'\n        group.kind !== 262144 && // 'Accessors'\n        group.kind !== 4 // 'Namespaces'\n    ) {\n        if (\n            (group.kind === 1024 || group.kind === 2048) &&\n            hasTag(node, 'command')\n        ) {\n            // It's a series of commands. Display the index, but no title\n            header += renderIndex(node, '', topics);\n        } else if (\n            (group.kind & (2 | 4 | 128 | 256)) === 0 &&\n            group.children.length > 1\n        ) {\n            // A group of things other than namespaces, enums, classes or\n            // interfaces\n            // with more than single entry\n            const displayTitle = {\n                1: 'Modules',\n                2: 'Namespaces',\n                4: 'Enums',\n                32: 'Variables',\n                64: 'Functions',\n                128: 'Classes',\n                245: 'Interfaces',\n                4194304: 'Types',\n            }[group.kind];\n            header += renderIndex(node, displayTitle, topics);\n        }\n    }\n    const body = topics\n        .map((topic) => {\n            let r = '';\n            if (topic.title) {\n                r = heading(3, '', topic.title, null, {\n                    className: 'category-title',\n                });\n            }\n            r += filterInherited(topic.children)\n                .filter((x) => x.id !== node.extendedTypes?.[0].id ?? -1) // ??? The parent class is sometimes present as a static property of the subclass\n                .map((x) => render(x, 'section'))\n                .join('');\n            return r;\n        })\n        .join('');\n    if (!body) return '';\n    return section(header + body);\n}\n\nfunction renderGroups(node: Reflection): string {\n    if (!node.groups) return '';\n    const groups = sortGroups(node.groups);\n    return (\n        renderComment(node, 'section') +\n        groups\n            .map((x) => renderGroup(node, x))\n            .filter((x) => !!x)\n            .join('\\n\\n')\n    );\n}\n\n/**\n * Render a reflection (an 'element'), such as a module, a variable, a type declaration,\n * an argument list, a type definition, etc...\n *\n * @param style One of:\n * - 'inline' keep all the output info in a single line\n * - 'block' if necessary, use multiple lines to render\n * - 'card' for some types (function definition), display them using a 'card'\n * section. This allows the most info to be displayed, including comments about\n * this item.\n */\nfunction render(node: Reflection | number, style = 'inline'): string {\n    // See https://github.com/TypeStrong/typedoc/blob/master/src/lib/models/reflections/abstract.ts\n    // for a list of the possible reflection kinds\n\n    // On occasion, some nodes are not reachable by traversing the\n    // tree. In this case, getReflectionById() fails and render()\n    // can get called with an undefined node. Fail gracefully.\n    // This happens for example with\n    // ```\n    //   export function foo(options: {\n    //        withHighlighting: boolean;\n    //    }) : boolean\n    // ```\n    // 'withHighlighting' is a variable, but unreachable\n\n    if (typeof node === 'undefined') return '';\n    if (typeof node === 'number') node = getReflectionByID(node);\n    if (typeof node === 'string') node = getReflectionByName(node);\n\n    // If there are groups (i.e. all methods for a class), use them.\n    // Otherwise, node.children will have the full list, but not grouped by 'kind'.\n    if (style === 'section' && node.groups) {\n        if (node.kind === 128 || node.kind === 256) {\n            // Class or Interface\n            return renderClassSection(node);\n        } else if (node.kind === 4) {\n            // Enum\n            return renderEnumCard(node);\n        } else if (node.kind === 1) {\n            // Modules\n            const permalink = makePermalink(node);\n\n            const result =\n                heading(2, '', getQualifiedName(node), permalink) +\n                renderGroups(node);\n\n            return section(result, { permalink });\n        }\n        return renderGroups(node);\n    }\n\n    const parent = getParent(node);\n\n    if (typeof node.kind === 'undefined') {\n        if (node.type === 'abstract') {\n            // @todo\n            /*\nabstract class Animal {\n    abstract makeSound(): void;\n    move(): void {\n        console.log(\"roaming the earth...\");\n    }\n}\n*/ console.error(\n                'Unexpected node type ',\n                node.type\n            );\n        }\n\n        if (node.type === 'array') {\n            // @check (number | string)[]\n            return render(node.elementType, 'inline') + punct('[]');\n        }\n\n        if (node.type === 'conditionals') {\n            // @todo\n            // 'T extends U ? X : Y'\n            console.error('Unexpected node type ', node.type);\n        }\n\n        if (node.type === 'index') {\n            console.error('Unexpected node type ', node.type);\n        }\n\n        if (node.type === 'indexedAccess') {\n            // e.g. 'T[U]'\n            return (\n                render(node.objectType) +\n                punct('[') +\n                render(node.indexType) +\n                punct(']')\n            );\n        }\n\n        if (node.type === 'inferred') {\n            console.error('Unexpected node type ', node.type);\n        }\n\n        if (node.type === 'intersection') {\n            if (style === 'block') {\n                return (\n                    '<ul class=\"type-block\"><li>' +\n                    node.types\n                        .map((x) => render(x, 'block'))\n                        .filter((x) => !!x)\n                        .join(punct(' &amp; ') + '</li>\\n<li>') +\n                    '</li></ul>'\n                );\n            }\n            return node.types\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(punct(' &amp; '));\n        }\n\n        if (node.type === 'intrinsic') {\n            // E.g. \"number\", \"string\", etc...\n            return keyword(node.name);\n        }\n\n        if (node.type === 'predicate') {\n            console.error('Unexpected node type ', node.type);\n        }\n\n        if (node.type === 'query') {\n            /*\n             * Represents a type that is constructed by querying the type of a reflection.\n             * ```ts\n             * const x = 1\n             * type Z = typeof x // query on reflection for x\n             * ```\n             */\n            return keyword('typeof ') + render(node.queryType);\n        }\n\n        if (node.type === 'reference') {\n            // E.g. the name of another type\n            // For example, T in 'f(a:T)'\n\n            let typeArguments = '';\n            if (node.typeArguments) {\n                typeArguments =\n                    punct('&lt;') +\n                    node.typeArguments.map((x) => render(x)).join(punct(', ')) +\n                    punct('&gt;');\n            }\n\n            // Enum, Class, Interface, TypeAlias\n            let candidate;\n            if (typeof node.id !== 'undefined') {\n                candidate = getReflectionByID(node.id);\n            }\n\n            if (!candidate) {\n                // Find by name in the parent space\n                candidate = getReflectionByName(\n                    node.name,\n                    parent,\n                    4 | 128 | 256 | 4194304\n                );\n            }\n            if (candidate) {\n                return (\n                    renderPermalink(\n                        makePermalink(candidate),\n                        candidate.kind === 16\n                            ? // For enum members, include the parent (the Enum) name\n                              parent.name + '.' + node.name\n                            : node.name\n                    ) + typeArguments\n                );\n            }\n\n            // Find by name in the global space\n            candidate = getReflectionByName(\n                node.name,\n                undefined,\n                4 | 128 | 256 | 4194304\n            );\n            if (candidate) {\n                return (\n                    renderPermalink(makePermalink(candidate), node.name) +\n                    typeArguments\n                );\n            }\n            if (candidate) {\n                return node.name + typeArguments; // Don't render, it's a reference, we just need its name\n            }\n\n            if (\n                [\n                    'Object',\n                    'Function',\n                    'Boolean',\n                    'Symbol',\n                    'String',\n                    'RegExp',\n                    'Object',\n                    'Number',\n                    'BigInt',\n                    'Math',\n                    'Date',\n                    'Infinity',\n                    'NaN',\n                    'globalThis',\n                    'Error',\n                    'AggregateError',\n                    'InternalError',\n                    'RangeError',\n                    'ReferenceError',\n                    'SyntaxError',\n                    'TypeError',\n                    'URIError',\n                    'Array',\n                    'Int8Array',\n                    'Uint8Array',\n                    'Uint8Array',\n                    'Uint8ClampedArray',\n                    'Int16Array',\n                    'Uint16Array',\n                    'Int32Array',\n                    'Uint32Array',\n                    'Float32Array',\n                    'Float64Array',\n                    'BigInt64Array',\n                    'BigUint64Array',\n                    'Map',\n                    'Set',\n                    'WeakMap',\n                    'WeakSet',\n                    'ArrayBuffer',\n                    'SharedArrayBuffer',\n                    'Atomics',\n                    'DataView',\n                    'JSON',\n                    'Promise',\n                    'Generator',\n                    'GeneratorFunction',\n                    'AsyncFunction',\n                    'Iterator',\n                    'AsyncIterator',\n                    'Reflect',\n                    'Proxy',\n                    'Intl',\n                    'WebAssembly',\n                ].includes(node.name)\n            ) {\n                return (\n                    '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/' +\n                    node.name +\n                    '\" class=\"externallink\">' +\n                    node.name +\n                    '<svg><use xlink:href=\"#external-link\"></use></svg>' +\n                    '</a>' +\n                    typeArguments\n                );\n            }\n\n            // Typescript utility types\n            const typescriptUtilityType = {\n                Partial: 'partialtype',\n                Readonly: 'readonlytype',\n                Record: 'recordtype',\n                Pick: 'picktype',\n                Omit: 'omitype',\n                Exclude: 'excludetype',\n                Extract: 'extracttype',\n                NonNullable: 'nonnullabletype',\n                Parameters: 'parameterestype',\n                ConstructorParameters: 'constructorparameterstype',\n                ReturnType: 'returntype',\n                InstanceType: 'instancetype',\n                Required: 'requiredtype',\n                ThisParameterType: 'thisparametertype',\n                OmitThisParameter: 'omitthisparametertype',\n                ThisType: 'thistypetype',\n            }[node.name];\n            if (typescriptUtilityType) {\n                return (\n                    '<a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#' +\n                    typescriptUtilityType +\n                    '\" class=\"externallink\">' +\n                    node.name +\n                    '<svg><use xlink:href=\"#external-link\"></use></svg>' +\n                    '</a>' +\n                    typeArguments\n                );\n            }\n\n            // We could not resolve this reference.\n            // This can happen for globally defined types, for example\n            // 'KeyboardEvent'\n            // In that case, create a link to reference documentation\n            return (\n                '<a href=\"https://developer.mozilla.org/Web/API/' +\n                node.name +\n                '\" class=\"externallink\">' +\n                node.name +\n                '<svg><use xlink:href=\"#external-link\"></use></svg>' +\n                '</a>' +\n                typeArguments\n            );\n        }\n\n        if (node.type === 'reflection') {\n            return render(node.declaration, style);\n        }\n\n        if (node.type === 'stringLiteral') {\n            return span('\"' + node.value + '\"', 'string-literal');\n        }\n\n        if (node.type === 'tuple') {\n            return (\n                punct('[') +\n                node.elements\n                    .map((x) => render(x))\n                    .filter((x) => !!x)\n                    .join(punct(', ')) +\n                punct(']')\n            );\n        }\n\n        if (node.type === 'typeOperator') {\n            // e.g.. 'typeof'\n            return keyword(node.operator + ' ') + render(node.target);\n        }\n\n        if (node.type === 'typeParameter') {\n            // The name of a referenced type, e.g.\n            // 'U' in 'T[U]'\n            let result = renderPermalink(makePermalink(node));\n            if (node.constraint) {\n                result += keyword(' extends ');\n                result += render(node.constraint);\n            }\n            return result;\n        }\n\n        if (node.type === 'union') {\n            // E.g. \"a | b\"\n            if (style === 'block' && !everyStringLiteral(node.types)) {\n                return (\n                    '<ul class=\"type-block\"><li>' +\n                    punct('| ') +\n                    node.types\n                        .map((x) => render(x))\n                        .join('</li>\\n<li>' + punct('| ')) +\n                    '</li></ul>'\n                );\n            }\n            return node.types.map((x) => render(x)).join(punct(' | '));\n        }\n\n        if (node.type === 'unknown') {\n            // This is used when the type is... not known. For example in\n            // `export const PI = 3.1415`, the type is 'unknown' (which has a 'name'\n            // value of \"3.1415\"\n            return '';\n        }\n\n        if (node.type === 'void') {\n            return keyword('void');\n        }\n    }\n\n    let result = '';\n\n    switch (node.kind) {\n        case 0: // Global/File\n        case 1: // Module\n        case 2: // Namespace\n        case 4: // Enum\n            // We always do it by groups\n            console.assert(\n                'Unexpected node kind ',\n                Number(node.kind).toString()\n            );\n            break;\n\n        case 16: // Enum Member\n            result = `<dt id=\"${encodeURIComponent(\n                makePermalink(node).anchor\n            )}\">`;\n            result += '<strong>' + node.name + '</strong>';\n            if (typeof node.defaultValue === 'string') {\n                result += punct(' = ') + node.defaultValue;\n            }\n            result += '</dt><dd>';\n            result += renderFlags(node);\n            result += renderComment(node, style);\n            result += '</dd>';\n            break;\n\n        case 32: // Variable\n            // e.g. \"a?: number\" as a property of an object\n            if (style === 'card' || style === 'section') {\n                result = renderCard(\n                    node,\n                    '',\n                    div(render(node, 'block')) + renderComment(node, 'block')\n                );\n            } else {\n                result += '<strong>' + node.name + '</strong>';\n                if (hasFlag(node, 'isOptional')) {\n                    result += span('?', 'modifier');\n                }\n                if ((node.type as Reflection)?.type === 'unknown') {\n                    result += punct(' = ');\n                    result += (node.type as Reflection).name || '';\n                }\n                if ((node.type as Reflection)?.type !== 'unknown') {\n                    result += punct(': ');\n                    result += render(node.type as Reflection);\n                }\n            }\n            break;\n\n        case 64: // Function\n            if (style === 'card' || style === 'section') {\n                result = renderMethodCard(node);\n            } else {\n                console.warn('Unexpected style, kind ', node.kind);\n            }\n            break;\n\n        case 128: // Class\n            if (style === 'card' || style === 'section') {\n                // Classes are usually rendered as a 'section' in renderClassSection()\n                // but if it's a very simple interface (uniform kind of children, few comments)\n                // we'll render it as a single card\n                // The decision is made in renderClassSection()\n\n                result = renderClassCard(node);\n            } else {\n                result = node.name;\n            }\n            break;\n\n        case 256: // Interface\n            if (style === 'card' || style === 'section') {\n                // Interfaces are usually rendered as a 'section' in renderClassSection()\n                // but if it's a very simple interface (uniform kind of children, few comments)\n                // we'll render it as a single card\n                // The decision is made in renderClassSection()\n\n                result = renderClassCard(node);\n            } else {\n                result = node.name;\n            }\n            break;\n\n        case 512: // Constructor\n            if (style === 'card' || style === 'section') {\n                result = renderMethodCard(node);\n            } else {\n                result = 'constructor' + render(node.signatures[0], style);\n            }\n            break;\n\n        case 1024: // Property (of a class or interface)\n            if (style === 'card' || style === 'section') {\n                result = renderPropertyCard(node);\n            } else {\n                // If not a private symbol (starts with '#')...\n                if (node.name[0] !== '#') {\n                    result =\n                        (parent ? parent.name + '.' : '') +\n                        node.name +\n                        punct(': ') +\n                        render(node.type as Reflection, style);\n                }\n            }\n            break;\n\n        case 2048: // Method (of a class or interface) (may have multiple signatures)\n            if (style === 'card' || style === 'section') {\n                result = renderMethodCard(node);\n            } else {\n                // Only render the comment\n                // This code path is used with @inheritDoc()\n                result = renderComment(node, 'block');\n            }\n            break;\n\n        case 4096: // Call signature\n        case 16384: // Constructor signature\n            // E.g. in 'f(a: T): U', the '(a: T):U' part.\n            if (style === 'inline') {\n                // (a:b) : c\n                result = punct('(');\n                if (node.parameters) {\n                    result += node.parameters\n                        .map((x) => render(x))\n                        .join(punct(', '));\n                }\n                result += punct(')');\n                result += punct(': ') + render(node.type as Reflection);\n            } else if (style === 'block') {\n                // Display info for each param:\n                // - a: b blah blah\n                // - -> c blah blah\n                if (node.parameters || node.type) {\n                    result += '\\n<dl>\\n';\n                    if (node.parameters) {\n                        result +=\n                            '\\n<dt>\\n' +\n                            node.parameters\n                                .map((param) => {\n                                    let r =\n                                        '<strong><var>' +\n                                        param.name +\n                                        '</var></strong>';\n                                    const typeDef = render(\n                                        param.type as Reflection,\n                                        'block'\n                                    );\n                                    if (typeDef) {\n                                        r += punct(': ') + typeDef;\n                                    }\n                                    r += '\\n</dt><dd>\\n';\n                                    r += renderComment(param, style);\n                                    return r;\n                                })\n                                .join('\\n</dd><dt>\\n');\n                        result += '\\n</dd>\\n';\n                    }\n                    if (\n                        node.type &&\n                        (node.comment?.returns ||\n                            !isVoid(node.type as Reflection))\n                    ) {\n                        result += '\\n<dt>\\n';\n                        result +=\n                            '<strong>→ </strong>' +\n                            render(node.type as Reflection);\n                        result += '\\n</dt><dd>\\n';\n                        if (node.comment?.returns) {\n                            result += renderNotices(node, node.comment.returns);\n                        }\n                        result += '\\n</dd>\\n';\n                    }\n                    result += '\\n</dl>\\n';\n                }\n            } else {\n                console.error('Call signature style not supported');\n            }\n            break;\n\n        case 8192: // Index signature\n            // E.g. \"[key: string]\" in \"{[key: string]}\"\n            result +=\n                punct('[') +\n                node.parameters.map((x) => render(x)).join(punct(', ')) +\n                punct(']');\n            result += punct(': ') + render(node.type as Reflection);\n            break;\n\n        // case 16384: // Constructor signature\n        // console.warn('Unexpected kind ', node.kind);\n        // break;\n\n        case 32768: // Parameter\n            // E.g. \"foo: string\" in \"[foo: string]: string\"\n            // Also \"a:T\" in \"f(a:T)\"\n            if (hasFlag(node, 'isRest')) {\n                result += span('...', 'modifier');\n            }\n            result += `<var>${node.name}</var>`;\n            if (hasFlag(node, 'isOptional')) {\n                result += span('?', 'modifier');\n            }\n            result += punct(': ') + render(node.type as Reflection);\n            break;\n\n        case 65536: // Type literal\n            // e.g. '{...}' or  '(x: string) => boolean'\n            if (node.signatures) {\n                result += node.signatures\n                    .map((x) => render(x))\n                    .join(punct('; '));\n            } else if (node.children || node.indexSignature) {\n                // E.g. `{ p: T; q: U }`\n                if (style === 'block' || style === 'block-inherit') {\n                    result += '<div><dl>';\n                    if (node.children) {\n                        result +=\n                            '<dt>' +\n                            node.children\n                                .map((x) => {\n                                    let dt = render(x) + punct(';');\n                                    if (hasTag(x, 'deprecated')) {\n                                        dt = span(dt, 'deprecated');\n                                    }\n                                    const dd =\n                                        renderFlags(x) +\n                                        renderComment(x, style);\n                                    return dt + '</dt><dd>' + dd;\n                                })\n                                .join('</dd><dt>');\n                        result += '</dd>';\n                    }\n                    if (node.indexSignature) {\n                        result += '<dt>';\n                        result += node.indexSignature\n                            .map((x) => render(x))\n                            .join(punct(';') + '</dt><dd>');\n                        result += '</dd>';\n                    }\n                    result += '</dl>' + '</div>';\n                } else if (style === 'inline') {\n                    result += punct('{');\n                    if (node.children) {\n                        result += node.children\n                            .map((x) => render(x))\n                            .join(punct('; '));\n                    }\n                    if (node.indexSignature) {\n                        result += node.indexSignature\n                            .map((x) => render(x))\n                            .join(punct('; '));\n                    }\n                    result += punct('}');\n                } else {\n                    console.error('Unexpected style for Type Literal');\n                }\n            }\n            break;\n\n        case 131072: // Type parameter\n            result += node.name;\n            if (node.type) {\n                result += keyword(' extends ');\n                result += render(node.type as Reflection);\n            }\n            break;\n\n        case 524288: // Get signature\n        case 1048576: // Set signature\n            // The signature for the get/set should never be rendered.\n            // They are aggregated in their parent 'Accessor' node\n            console.warn(\n                `Unexpected kind = ${node.kind} for ${getQualifiedName(\n                    node\n                ).replace(/<[^>]*>/g, ' ')}`\n            );\n            break;\n\n        case 262144: // Accessor (get/set)\n            if (style === 'card' || style === 'section') {\n                result = renderAccessorCard(node);\n            } else {\n                console.warn('Unexpected style, kind ', node.kind);\n            }\n            break;\n\n        case 2097152: // Object literal\n            console.warn('Unexpected style, kind ', node.kind);\n            break;\n\n        case 4194304: // Type Alias\n            // e.g. 'type foo = string';\n            if (style === 'card' || style === 'section') {\n                result = renderTypeAliasCard(node);\n            } else {\n                const def = render(node.type as Reflection, style);\n                result = '';\n                if (node.typeParameter) {\n                    result += punct('&lt;');\n                    result += node.typeParameter\n                        .map((typeParam) => render(typeParam))\n                        .join(punct(', '));\n                    result += punct('&gt;');\n                    if (def) {\n                        result += punct(' = ');\n                    }\n                }\n                result += def;\n            }\n            break;\n\n        case 8388608: // Event\n            console.warn('Unexpected style, kind ', node.kind);\n            break;\n\n        case 16777216:\n            // \"reference\"\n            break;\n\n        default:\n            console.warn(\n                `Unexpected kind = ${node.kind} for ${getQualifiedName(\n                    node\n                ).replace(/<[^>]*>/g, ' ')}`\n            );\n    }\n\n    return result;\n}\n\nfunction getReflectionsFromFile(src: string[], options: Options): Reflection {\n    let result = {};\n    const app = new TypeDoc.Application();\n\n    // If you want TypeDoc to load tsconfig.json / typedoc.json files\n    app.options.addReader(new TypeDoc.TSConfigReader());\n    app.options.addReader(new TypeDoc.TypeDocReader());\n\n    app.bootstrap({\n        logger: (message, _level, _newline) => console.log(message),\n        mode: 'modules', // or 'file', 'modules' or 'library'\n\n        target: 'es2019',\n        module: 'ESNext',\n        experimentalDecorators: true,\n\n        // To properly resolve 'import' statements\n        moduleResolution: 'node',\n\n        noEmit: 'true',\n\n        // We want to preserve the internals in the AST\n        // and we'll strip/hide them separately\n        stripInternal: false,\n\n        // To process .d.ts files\n        includeDeclarations: true,\n\n        // To exclude references from external files\n        excludeExternals: true,\n    });\n\n    src = app.expandInputFiles(\n        src.map((x) => {\n            const f = path.resolve(path.normalize(x));\n            if (!fs.existsSync(f)) {\n                console.warn('File not found \"' + f + '\"');\n            }\n            return f;\n        })\n    );\n\n    const convertResult = app.converter.convert(src);\n    if (convertResult.errors?.length) {\n        app.logger.diagnostics(convertResult.errors);\n        if (options.ignoreErrors) {\n            app.logger.resetErrors();\n        } else {\n            return undefined;\n        }\n    }\n\n    if (convertResult.project) {\n        result = app.serializer.projectToObject(convertResult.project);\n    }\n\n    return result as Reflection;\n}\n\nfunction applyTemplate(\n    src: string | ((substitutions: { [key: string]: any }) => string),\n    substitutions: { [key: string]: any }\n): string {\n    if (typeof src === 'string') {\n        Object.keys(substitutions).forEach((key) => {\n            if (typeof substitutions[key] === 'string') {\n                src = (src as string).replace(\n                    new RegExp('{{' + key + '}}', 'g'),\n                    substitutions[key]\n                );\n            }\n        });\n        return src;\n    }\n    if (typeof src === 'function') {\n        return src(substitutions);\n    }\n    return '';\n}\n\nlet gNodes: Reflection;\n\nlet gOptions: Options;\n\n/**\n *  Main entry point\n *\n */\n\nexport function grok(\n    src: string[],\n    options: Options\n): { [file: string]: string } {\n    try {\n        gOptions = options;\n        gNodes = getReflectionsFromFile(src, options);\n\n        const sdkName = options.sdkName ?? '';\n        const packageName = options.sdkName ?? gNodes.name ?? '';\n\n        let content;\n        if (options.modules) {\n            const modules = options.modules\n                .map((x) => getReflectionByName(x, gNodes, 1))\n                .filter((x) => !!x);\n            if (modules.length === 0) {\n                console.warn(\n                    'Modules ' +\n                        options.modules.join(', ') +\n                        ' not found in \"' +\n                        src +\n                        '\"'\n                );\n            } else if (modules.length !== options.modules.length) {\n                const moduleNames = modules.map((x) => getName(x));\n                console.warn(\n                    'Module ' +\n                        options.modules\n                            .filter((x) => !moduleNames.includes(x))\n                            .join(', ') +\n                        ' in \"' +\n                        src +\n                        '\"'\n                );\n            }\n            content = renderIndex(gNodes, 'Modules', [\n                {\n                    title: '',\n                    children: modules,\n                },\n            ]);\n            content += modules.map((x) => render(x, 'section')).join('');\n            content = section(content);\n        }\n        if (!content) content = render(gNodes, 'section');\n        if (content) {\n            const document = applyTemplate(options.documentTemplate, {\n                packageName: escapeYAMLString(packageName),\n                sdkName: escapeYAMLString(trimNewline(sdkName)),\n                cssVariables: options.cssVariables,\n                content,\n            });\n            return { [options?.outFile ?? 'index.html']: document };\n        }\n    } catch (err) {\n        console.error(err);\n    }\n    return {};\n}\n"],"names":[],"mappings":"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"}